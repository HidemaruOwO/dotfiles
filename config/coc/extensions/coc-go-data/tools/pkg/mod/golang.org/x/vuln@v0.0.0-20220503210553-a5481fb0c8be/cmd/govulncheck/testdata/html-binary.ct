$ govulncheck -html ${novuln_binary}

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <link href="/static/govulncheck.css" rel="stylesheet">
  <title>govulncheck Results</title>
</head>
<body>

  <div>No vulnerabilities found.</div>

</body>
</html>


$ govulncheck -html ${vuln_binary} --> FAIL 3

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <link href="/static/govulncheck.css" rel="stylesheet">
  <title>govulncheck Results</title>
</head>
<body>

  <h2>GO-2021-0113</h2>
  <table>
    <tr>
      <td>Package</td>
      <td>golang.org/x/text/language</td>
    </tr>
    <tr>
      <td>Your version</td>
      <td>v0.3.0</td>
    </tr>
    <tr>
      <td>Fixed version</td>
      <td>v0.3.7</td>
    </tr>
    <tr>
      <td>Reference</td>
      <td>https://pkg.go.dev/vuln/GO-2021-0113</td>
    </tr>
    <tr>
      <td>Description</td>
      <td>Due to improper index calculation, an incorrectly formatted language tag can cause Parse
to panic via an out of bounds read. If Parse is used to process untrusted user inputs,
this may be used as a vector for a denial of service attack.
</td>
    </tr>
  </table>
  

</body>
</html>
